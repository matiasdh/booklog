// zod/v4@3.25.63 downloaded from https://ga.jspm.io/npm:zod@3.25.63/dist/esm/v4/index.js

import*as e from"zod/v4/core";import{$ZodError as t,_overwrite as n,_regex as o,_includes as i,_startsWith as r,_endsWith as c,_minLength as s,_maxLength as a,_length as u,_lowercase as l,_uppercase as d,_trim as m,_normalize as p,_toLowerCase as f,_toUpperCase as Z,_gt as _,_gte as h,_lt as y,_lte as $,_multipleOf as g,util as v,config as k,$brand as b,$input as I,$output as z,TimePrecision as j,clone as w,flattenError as T,formatError as S,function as D,globalRegistry as P,_maxSize as O,_mime as N,_minSize as E,_negative as x,_nonnegative as U,_nonpositive as C,_positive as L,prettifyError as R,_property as A,regexes as B,registry as F,_size as V,toJSONSchema as M,treeifyError as W}from"zod/v4/core";export{e as core};export{$brand,$input,$output,TimePrecision,clone,config,_endsWith as endsWith,flattenError,formatError,function,globalRegistry,_gt as gt,_gte as gte,_includes as includes,_length as length,_lowercase as lowercase,_lt as lt,_lte as lte,_maxLength as maxLength,_maxSize as maxSize,_mime as mime,_minLength as minLength,_minSize as minSize,_multipleOf as multipleOf,_negative as negative,_nonnegative as nonnegative,_nonpositive as nonpositive,_normalize as normalize,_overwrite as overwrite,_positive as positive,prettifyError,_property as property,_regex as regex,regexes,registry,_size as size,_startsWith as startsWith,toJSONSchema,_toLowerCase as toLowerCase,_toUpperCase as toUpperCase,treeifyError,_trim as trim,_uppercase as uppercase}from"zod/v4/core";import G from"zod/v4/locales/en.js";import{i as J}from"../../../_/DCImmIHf.js";import"./locales/ar.js";import"../../../_/B1zKr9SI.js";import"./locales/az.js";import"./locales/be.js";import"./locales/ca.js";import"./locales/cs.js";import"./locales/de.js";import"./locales/en.js";import"./locales/es.js";import"./locales/fa.js";import"./locales/fi.js";import"./locales/fr.js";import"./locales/fr-CA.js";import"./locales/he.js";import"./locales/hu.js";import"./locales/id.js";import"./locales/it.js";import"./locales/ja.js";import"./locales/kh.js";import"./locales/ko.js";import"./locales/mk.js";import"./locales/ms.js";import"./locales/nl.js";import"./locales/no.js";import"./locales/ota.js";import"./locales/ps.js";import"./locales/pl.js";import"./locales/pt.js";import"./locales/ru.js";import"./locales/sl.js";import"./locales/sv.js";import"./locales/ta.js";import"./locales/th.js";import"./locales/tr.js";import"./locales/ua.js";import"./locales/ur.js";import"./locales/vi.js";import"./locales/zh-CN.js";import"./locales/zh-TW.js";const K=e.$constructor("ZodISODateTime",((t,n)=>{e.$ZodISODateTime.init(t,n);fe.init(t,n)}));function Y(t){return e._isoDateTime(K,t)}const X=e.$constructor("ZodISODate",((t,n)=>{e.$ZodISODate.init(t,n);fe.init(t,n)}));function q(t){return e._isoDate(X,t)}const H=e.$constructor("ZodISOTime",((t,n)=>{e.$ZodISOTime.init(t,n);fe.init(t,n)}));function Q(t){return e._isoTime(H,t)}const ee=e.$constructor("ZodISODuration",((t,n)=>{e.$ZodISODuration.init(t,n);fe.init(t,n)}));function te(t){return e._isoDuration(ee,t)}var ne=Object.freeze(Object.defineProperty({__proto__:null,ZodISODate:X,ZodISODateTime:K,ZodISODuration:ee,ZodISOTime:H,date:q,datetime:Y,duration:te,time:Q},Symbol.toStringTag,{value:"Module"}));const oe=(n,o)=>{t.init(n,o);n.name="ZodError";Object.defineProperties(n,{format:{value:t=>e.formatError(n,t)},flatten:{value:t=>e.flattenError(n,t)},addIssue:{value:e=>n.issues.push(e)},addIssues:{value:e=>n.issues.push(...e)},isEmpty:{get(){return n.issues.length===0}}})};const ie=e.$constructor("ZodError",oe);const re=e.$constructor("ZodError",oe,{Parent:Error});const ce=e._parse(re);const se=e._parseAsync(re);const ae=e._safeParse(re);const ue=e._safeParseAsync(re);const le=e.$constructor("ZodType",((t,o)=>{e.$ZodType.init(t,o);t.def=o;Object.defineProperty(t,"_def",{value:o});t.check=(...e)=>t.clone({...o,checks:[...o.checks??[],...e.map((e=>typeof e==="function"?{_zod:{check:e,def:{check:"custom"},onattach:[]}}:e))]});t.clone=(n,o)=>e.clone(t,n,o);t.brand=()=>t;t.register=(e,n)=>{e.add(t,n);return t};t.parse=(e,n)=>ce(t,e,n,{callee:t.parse});t.safeParse=(e,n)=>ae(t,e,n);t.parseAsync=async(e,n)=>se(t,e,n,{callee:t.parseAsync});t.safeParseAsync=async(e,n)=>ue(t,e,n);t.spa=t.safeParseAsync;t.refine=(e,n)=>t.check(Bn(e,n));t.superRefine=e=>t.check(Fn(e));t.overwrite=e=>t.check(n(e));t.optional=()=>mn(t);t.nullable=()=>fn(t);t.nullish=()=>mn(fn(t));t.nonoptional=e=>vn(t,e);t.array=()=>Et(t);t.or=e=>Bt([t,e]);t.and=e=>Wt(t,e);t.transform=e=>Sn(t,ln(e));t.default=e=>hn(t,e);t.prefault=e=>$n(t,e);t.catch=e=>zn(t,e);t.pipe=e=>Sn(t,e);t.readonly=()=>Pn(t);t.describe=n=>{const o=t.clone();e.globalRegistry.add(o,{description:n});return o};Object.defineProperty(t,"description",{get(){return e.globalRegistry.get(t)?.description},configurable:true});t.meta=(...n)=>{if(n.length===0)return e.globalRegistry.get(t);const o=t.clone();e.globalRegistry.add(o,n[0]);return o};t.isOptional=()=>t.safeParse(void 0).success;t.isNullable=()=>t.safeParse(null).success;return t}));const de=e.$constructor("_ZodString",((t,n)=>{e.$ZodString.init(t,n);le.init(t,n);const _=t._zod.bag;t.format=_.format??null;t.minLength=_.minimum??null;t.maxLength=_.maximum??null;t.regex=(...e)=>t.check(o(...e));t.includes=(...e)=>t.check(i(...e));t.startsWith=(...e)=>t.check(r(...e));t.endsWith=(...e)=>t.check(c(...e));t.min=(...e)=>t.check(s(...e));t.max=(...e)=>t.check(a(...e));t.length=(...e)=>t.check(u(...e));t.nonempty=(...e)=>t.check(s(1,...e));t.lowercase=e=>t.check(l(e));t.uppercase=e=>t.check(d(e));t.trim=()=>t.check(m());t.normalize=(...e)=>t.check(p(...e));t.toLowerCase=()=>t.check(f());t.toUpperCase=()=>t.check(Z())}));const me=e.$constructor("ZodString",((t,n)=>{e.$ZodString.init(t,n);de.init(t,n);t.email=n=>t.check(e._email(Ze,n));t.url=n=>t.check(e._url(Ie,n));t.jwt=n=>t.check(e._jwt(et,n));t.emoji=n=>t.check(e._emoji(je,n));t.guid=n=>t.check(e._guid(he,n));t.uuid=n=>t.check(e._uuid($e,n));t.uuidv4=n=>t.check(e._uuidv4($e,n));t.uuidv6=n=>t.check(e._uuidv6($e,n));t.uuidv7=n=>t.check(e._uuidv7($e,n));t.nanoid=n=>t.check(e._nanoid(Te,n));t.guid=n=>t.check(e._guid(he,n));t.cuid=n=>t.check(e._cuid(De,n));t.cuid2=n=>t.check(e._cuid2(Oe,n));t.ulid=n=>t.check(e._ulid(Ee,n));t.base64=n=>t.check(e._base64(Ke,n));t.base64url=n=>t.check(e._base64url(Xe,n));t.xid=n=>t.check(e._xid(Ue,n));t.ksuid=n=>t.check(e._ksuid(Le,n));t.ipv4=n=>t.check(e._ipv4(Ae,n));t.ipv6=n=>t.check(e._ipv6(Fe,n));t.cidrv4=n=>t.check(e._cidrv4(Me,n));t.cidrv6=n=>t.check(e._cidrv6(Ge,n));t.e164=n=>t.check(e._e164(He,n));t.datetime=e=>t.check(Y(e));t.date=e=>t.check(q(e));t.time=e=>t.check(Q(e));t.duration=e=>t.check(te(e))}));function pe(t){return e._string(me,t)}const fe=e.$constructor("ZodStringFormat",((t,n)=>{e.$ZodStringFormat.init(t,n);de.init(t,n)}));const Ze=e.$constructor("ZodEmail",((t,n)=>{e.$ZodEmail.init(t,n);fe.init(t,n)}));function _e(t){return e._email(Ze,t)}const he=e.$constructor("ZodGUID",((t,n)=>{e.$ZodGUID.init(t,n);fe.init(t,n)}));function ye(t){return e._guid(he,t)}const $e=e.$constructor("ZodUUID",((t,n)=>{e.$ZodUUID.init(t,n);fe.init(t,n)}));function ge(t){return e._uuid($e,t)}function ve(t){return e._uuidv4($e,t)}function ke(t){return e._uuidv6($e,t)}function be(t){return e._uuidv7($e,t)}const Ie=e.$constructor("ZodURL",((t,n)=>{e.$ZodURL.init(t,n);fe.init(t,n)}));function ze(t){return e._url(Ie,t)}const je=e.$constructor("ZodEmoji",((t,n)=>{e.$ZodEmoji.init(t,n);fe.init(t,n)}));function we(t){return e._emoji(je,t)}const Te=e.$constructor("ZodNanoID",((t,n)=>{e.$ZodNanoID.init(t,n);fe.init(t,n)}));function Se(t){return e._nanoid(Te,t)}const De=e.$constructor("ZodCUID",((t,n)=>{e.$ZodCUID.init(t,n);fe.init(t,n)}));function Pe(t){return e._cuid(De,t)}const Oe=e.$constructor("ZodCUID2",((t,n)=>{e.$ZodCUID2.init(t,n);fe.init(t,n)}));function Ne(t){return e._cuid2(Oe,t)}const Ee=e.$constructor("ZodULID",((t,n)=>{e.$ZodULID.init(t,n);fe.init(t,n)}));function xe(t){return e._ulid(Ee,t)}const Ue=e.$constructor("ZodXID",((t,n)=>{e.$ZodXID.init(t,n);fe.init(t,n)}));function Ce(t){return e._xid(Ue,t)}const Le=e.$constructor("ZodKSUID",((t,n)=>{e.$ZodKSUID.init(t,n);fe.init(t,n)}));function Re(t){return e._ksuid(Le,t)}const Ae=e.$constructor("ZodIPv4",((t,n)=>{e.$ZodIPv4.init(t,n);fe.init(t,n)}));function Be(t){return e._ipv4(Ae,t)}const Fe=e.$constructor("ZodIPv6",((t,n)=>{e.$ZodIPv6.init(t,n);fe.init(t,n)}));function Ve(t){return e._ipv6(Fe,t)}const Me=e.$constructor("ZodCIDRv4",((t,n)=>{e.$ZodCIDRv4.init(t,n);fe.init(t,n)}));function We(t){return e._cidrv4(Me,t)}const Ge=e.$constructor("ZodCIDRv6",((t,n)=>{e.$ZodCIDRv6.init(t,n);fe.init(t,n)}));function Je(t){return e._cidrv6(Ge,t)}const Ke=e.$constructor("ZodBase64",((t,n)=>{e.$ZodBase64.init(t,n);fe.init(t,n)}));function Ye(t){return e._base64(Ke,t)}const Xe=e.$constructor("ZodBase64URL",((t,n)=>{e.$ZodBase64URL.init(t,n);fe.init(t,n)}));function qe(t){return e._base64url(Xe,t)}const He=e.$constructor("ZodE164",((t,n)=>{e.$ZodE164.init(t,n);fe.init(t,n)}));function Qe(t){return e._e164(He,t)}const et=e.$constructor("ZodJWT",((t,n)=>{e.$ZodJWT.init(t,n);fe.init(t,n)}));function tt(t){return e._jwt(et,t)}const nt=e.$constructor("ZodNumber",((t,n)=>{e.$ZodNumber.init(t,n);le.init(t,n);t.gt=(e,n)=>t.check(_(e,n));t.gte=(e,n)=>t.check(h(e,n));t.min=(e,n)=>t.check(h(e,n));t.lt=(e,n)=>t.check(y(e,n));t.lte=(e,n)=>t.check($(e,n));t.max=(e,n)=>t.check($(e,n));t.int=e=>t.check(rt(e));t.safe=e=>t.check(rt(e));t.positive=e=>t.check(_(0,e));t.nonnegative=e=>t.check(h(0,e));t.negative=e=>t.check(y(0,e));t.nonpositive=e=>t.check($(0,e));t.multipleOf=(e,n)=>t.check(g(e,n));t.step=(e,n)=>t.check(g(e,n));t.finite=()=>t;const o=t._zod.bag;t.minValue=Math.max(o.minimum??Number.NEGATIVE_INFINITY,o.exclusiveMinimum??Number.NEGATIVE_INFINITY)??null;t.maxValue=Math.min(o.maximum??Number.POSITIVE_INFINITY,o.exclusiveMaximum??Number.POSITIVE_INFINITY)??null;t.isInt=(o.format??"").includes("int")||Number.isSafeInteger(o.multipleOf??.5);t.isFinite=true;t.format=o.format??null}));function ot(t){return e._number(nt,t)}const it=e.$constructor("ZodNumberFormat",((t,n)=>{e.$ZodNumberFormat.init(t,n);nt.init(t,n)}));function rt(t){return e._int(it,t)}function ct(t){return e._float32(it,t)}function st(t){return e._float64(it,t)}function at(t){return e._int32(it,t)}function ut(t){return e._uint32(it,t)}const lt=e.$constructor("ZodBoolean",((t,n)=>{e.$ZodBoolean.init(t,n);le.init(t,n)}));function dt(t){return e._boolean(lt,t)}const mt=e.$constructor("ZodBigInt",((t,n)=>{e.$ZodBigInt.init(t,n);le.init(t,n);t.gte=(e,n)=>t.check(h(e,n));t.min=(e,n)=>t.check(h(e,n));t.gt=(e,n)=>t.check(_(e,n));t.gte=(e,n)=>t.check(h(e,n));t.min=(e,n)=>t.check(h(e,n));t.lt=(e,n)=>t.check(y(e,n));t.lte=(e,n)=>t.check($(e,n));t.max=(e,n)=>t.check($(e,n));t.positive=e=>t.check(_(BigInt(0),e));t.negative=e=>t.check(y(BigInt(0),e));t.nonpositive=e=>t.check($(BigInt(0),e));t.nonnegative=e=>t.check(h(BigInt(0),e));t.multipleOf=(e,n)=>t.check(g(e,n));const o=t._zod.bag;t.minValue=o.minimum??null;t.maxValue=o.maximum??null;t.format=o.format??null}));function pt(t){return e._bigint(mt,t)}const ft=e.$constructor("ZodBigIntFormat",((t,n)=>{e.$ZodBigIntFormat.init(t,n);mt.init(t,n)}));function Zt(t){return e._int64(ft,t)}function _t(t){return e._uint64(ft,t)}const ht=e.$constructor("ZodSymbol",((t,n)=>{e.$ZodSymbol.init(t,n);le.init(t,n)}));function yt(t){return e._symbol(ht,t)}const $t=e.$constructor("ZodUndefined",((t,n)=>{e.$ZodUndefined.init(t,n);le.init(t,n)}));function gt(t){return e._undefined($t,t)}const vt=e.$constructor("ZodNull",((t,n)=>{e.$ZodNull.init(t,n);le.init(t,n)}));function kt(t){return e._null(vt,t)}const bt=e.$constructor("ZodAny",((t,n)=>{e.$ZodAny.init(t,n);le.init(t,n)}));function It(){return e._any(bt)}const zt=e.$constructor("ZodUnknown",((t,n)=>{e.$ZodUnknown.init(t,n);le.init(t,n)}));function jt(){return e._unknown(zt)}const wt=e.$constructor("ZodNever",((t,n)=>{e.$ZodNever.init(t,n);le.init(t,n)}));function Tt(t){return e._never(wt,t)}const St=e.$constructor("ZodVoid",((t,n)=>{e.$ZodVoid.init(t,n);le.init(t,n)}));function Dt(t){return e._void(St,t)}const Pt=e.$constructor("ZodDate",((t,n)=>{e.$ZodDate.init(t,n);le.init(t,n);t.min=(e,n)=>t.check(h(e,n));t.max=(e,n)=>t.check($(e,n));const o=t._zod.bag;t.minDate=o.minimum?new Date(o.minimum):null;t.maxDate=o.maximum?new Date(o.maximum):null}));function Ot(t){return e._date(Pt,t)}const Nt=e.$constructor("ZodArray",((t,n)=>{e.$ZodArray.init(t,n);le.init(t,n);t.element=n.element;t.min=(e,n)=>t.check(s(e,n));t.nonempty=e=>t.check(s(1,e));t.max=(e,n)=>t.check(a(e,n));t.length=(e,n)=>t.check(u(e,n));t.unwrap=()=>t.element}));function Et(t,n){return e._array(Nt,t,n)}function xt(e){const t=e._zod.def.shape;return cn(Object.keys(t))}const Ut=e.$constructor("ZodObject",((t,n)=>{e.$ZodObject.init(t,n);le.init(t,n);v.defineLazy(t,"shape",(()=>Object.fromEntries(Object.entries(t._zod.def.shape))));t.keyof=()=>nn(Object.keys(t._zod.def.shape));t.catchall=e=>t.clone({...t._zod.def,catchall:e});t.passthrough=()=>t.clone({...t._zod.def,catchall:jt()});t.loose=()=>t.clone({...t._zod.def,catchall:jt()});t.strict=()=>t.clone({...t._zod.def,catchall:Tt()});t.strip=()=>t.clone({...t._zod.def,catchall:void 0});t.extend=e=>v.extend(t,e);t.merge=e=>v.merge(t,e);t.pick=e=>v.pick(t,e);t.omit=e=>v.omit(t,e);t.partial=(...e)=>v.partial(dn,t,e[0]);t.required=(...e)=>v.required(gn,t,e[0])}));function Ct(e,t){const n={type:"object",get shape(){v.assignProp(this,"shape",{...e});return this.shape},...v.normalizeParams(t)};return new Ut(n)}function Lt(e,t){return new Ut({type:"object",get shape(){v.assignProp(this,"shape",{...e});return this.shape},catchall:Tt(),...v.normalizeParams(t)})}function Rt(e,t){return new Ut({type:"object",get shape(){v.assignProp(this,"shape",{...e});return this.shape},catchall:jt(),...v.normalizeParams(t)})}const At=e.$constructor("ZodUnion",((t,n)=>{e.$ZodUnion.init(t,n);le.init(t,n);t.options=n.options}));function Bt(e,t){return new At({type:"union",options:e,...v.normalizeParams(t)})}const Ft=e.$constructor("ZodDiscriminatedUnion",((t,n)=>{At.init(t,n);e.$ZodDiscriminatedUnion.init(t,n)}));function Vt(e,t,n){return new Ft({type:"union",options:t,discriminator:e,...v.normalizeParams(n)})}const Mt=e.$constructor("ZodIntersection",((t,n)=>{e.$ZodIntersection.init(t,n);le.init(t,n)}));function Wt(e,t){return new Mt({type:"intersection",left:e,right:t})}const Gt=e.$constructor("ZodTuple",((t,n)=>{e.$ZodTuple.init(t,n);le.init(t,n);t.rest=e=>t.clone({...t._zod.def,rest:e})}));function Jt(t,n,o){const i=n instanceof e.$ZodType;const r=i?o:n;const c=i?n:null;return new Gt({type:"tuple",items:t,rest:c,...v.normalizeParams(r)})}const Kt=e.$constructor("ZodRecord",((t,n)=>{e.$ZodRecord.init(t,n);le.init(t,n);t.keyType=n.keyType;t.valueType=n.valueType}));function Yt(e,t,n){return new Kt({type:"record",keyType:e,valueType:t,...v.normalizeParams(n)})}function Xt(e,t,n){return new Kt({type:"record",keyType:Bt([e,Tt()]),valueType:t,...v.normalizeParams(n)})}const qt=e.$constructor("ZodMap",((t,n)=>{e.$ZodMap.init(t,n);le.init(t,n);t.keyType=n.keyType;t.valueType=n.valueType}));function Ht(e,t,n){return new qt({type:"map",keyType:e,valueType:t,...v.normalizeParams(n)})}const Qt=e.$constructor("ZodSet",((t,n)=>{e.$ZodSet.init(t,n);le.init(t,n);t.min=(...n)=>t.check(e._minSize(...n));t.nonempty=n=>t.check(e._minSize(1,n));t.max=(...n)=>t.check(e._maxSize(...n));t.size=(...n)=>t.check(e._size(...n))}));function en(e,t){return new Qt({type:"set",valueType:e,...v.normalizeParams(t)})}const tn=e.$constructor("ZodEnum",((t,n)=>{e.$ZodEnum.init(t,n);le.init(t,n);t.enum=n.entries;t.options=Object.values(n.entries);const o=new Set(Object.keys(n.entries));t.extract=(e,t)=>{const i={};for(const t of e){if(!o.has(t))throw new Error(`Key ${t} not found in enum`);i[t]=n.entries[t]}return new tn({...n,checks:[],...v.normalizeParams(t),entries:i})};t.exclude=(e,t)=>{const i={...n.entries};for(const t of e){if(!o.has(t))throw new Error(`Key ${t} not found in enum`);delete i[t]}return new tn({...n,checks:[],...v.normalizeParams(t),entries:i})}}));function nn(e,t){const n=Array.isArray(e)?Object.fromEntries(e.map((e=>[e,e]))):e;return new tn({type:"enum",entries:n,...v.normalizeParams(t)})}
/** @deprecated This API has been merged into `z.enum()`. Use `z.enum()` instead.
 *
 * ```ts
 * enum Colors { red, green, blue }
 * z.enum(Colors);
 * ```
 */function on(e,t){return new tn({type:"enum",entries:e,...v.normalizeParams(t)})}const rn=e.$constructor("ZodLiteral",((t,n)=>{e.$ZodLiteral.init(t,n);le.init(t,n);t.values=new Set(n.values);Object.defineProperty(t,"value",{get(){if(n.values.length>1)throw new Error("This schema contains multiple valid literal values. Use `.values` instead.");return n.values[0]}})}));function cn(e,t){return new rn({type:"literal",values:Array.isArray(e)?e:[e],...v.normalizeParams(t)})}const sn=e.$constructor("ZodFile",((t,n)=>{e.$ZodFile.init(t,n);le.init(t,n);t.min=(n,o)=>t.check(e._minSize(n,o));t.max=(n,o)=>t.check(e._maxSize(n,o));t.mime=(n,o)=>t.check(e._mime(Array.isArray(n)?n:[n],o))}));function an(t){return e._file(sn,t)}const un=e.$constructor("ZodTransform",((t,n)=>{e.$ZodTransform.init(t,n);le.init(t,n);t._zod.parse=(e,o)=>{e.addIssue=o=>{if(typeof o==="string")e.issues.push(v.issue(o,e.value,n));else{const n=o;n.fatal&&(n.continue=false);n.code??(n.code="custom");n.input??(n.input=e.value);n.inst??(n.inst=t);n.continue??(n.continue=true);e.issues.push(v.issue(n))}};const i=n.transform(e.value,e);if(i instanceof Promise)return i.then((t=>{e.value=t;return e}));e.value=i;return e}}));function ln(e){return new un({type:"transform",transform:e})}const dn=e.$constructor("ZodOptional",((t,n)=>{e.$ZodOptional.init(t,n);le.init(t,n);t.unwrap=()=>t._zod.def.innerType}));function mn(e){return new dn({type:"optional",innerType:e})}const pn=e.$constructor("ZodNullable",((t,n)=>{e.$ZodNullable.init(t,n);le.init(t,n);t.unwrap=()=>t._zod.def.innerType}));function fn(e){return new pn({type:"nullable",innerType:e})}function Zn(e){return mn(fn(e))}const _n=e.$constructor("ZodDefault",((t,n)=>{e.$ZodDefault.init(t,n);le.init(t,n);t.unwrap=()=>t._zod.def.innerType;t.removeDefault=t.unwrap}));function hn(e,t){return new _n({type:"default",innerType:e,get defaultValue(){return typeof t==="function"?t():t}})}const yn=e.$constructor("ZodPrefault",((t,n)=>{e.$ZodPrefault.init(t,n);le.init(t,n);t.unwrap=()=>t._zod.def.innerType}));function $n(e,t){return new yn({type:"prefault",innerType:e,get defaultValue(){return typeof t==="function"?t():t}})}const gn=e.$constructor("ZodNonOptional",((t,n)=>{e.$ZodNonOptional.init(t,n);le.init(t,n);t.unwrap=()=>t._zod.def.innerType}));function vn(e,t){return new gn({type:"nonoptional",innerType:e,...v.normalizeParams(t)})}const kn=e.$constructor("ZodSuccess",((t,n)=>{e.$ZodSuccess.init(t,n);le.init(t,n);t.unwrap=()=>t._zod.def.innerType}));function bn(e){return new kn({type:"success",innerType:e})}const In=e.$constructor("ZodCatch",((t,n)=>{e.$ZodCatch.init(t,n);le.init(t,n);t.unwrap=()=>t._zod.def.innerType;t.removeCatch=t.unwrap}));function zn(e,t){return new In({type:"catch",innerType:e,catchValue:typeof t==="function"?t:()=>t})}const jn=e.$constructor("ZodNaN",((t,n)=>{e.$ZodNaN.init(t,n);le.init(t,n)}));function wn(t){return e._nan(jn,t)}const Tn=e.$constructor("ZodPipe",((t,n)=>{e.$ZodPipe.init(t,n);le.init(t,n);t.in=n.in;t.out=n.out}));function Sn(e,t){return new Tn({type:"pipe",in:e,out:t})}const Dn=e.$constructor("ZodReadonly",((t,n)=>{e.$ZodReadonly.init(t,n);le.init(t,n)}));function Pn(e){return new Dn({type:"readonly",innerType:e})}const On=e.$constructor("ZodTemplateLiteral",((t,n)=>{e.$ZodTemplateLiteral.init(t,n);le.init(t,n)}));function Nn(e,t){return new On({type:"template_literal",parts:e,...v.normalizeParams(t)})}const En=e.$constructor("ZodLazy",((t,n)=>{e.$ZodLazy.init(t,n);le.init(t,n);t.unwrap=()=>t._zod.def.getter()}));function xn(e){return new En({type:"lazy",getter:e})}const Un=e.$constructor("ZodPromise",((t,n)=>{e.$ZodPromise.init(t,n);le.init(t,n);t.unwrap=()=>t._zod.def.innerType}));function Cn(e){return new Un({type:"promise",innerType:e})}const Ln=e.$constructor("ZodCustom",((t,n)=>{e.$ZodCustom.init(t,n);le.init(t,n)}));function Rn(t,n){const o=new e.$ZodCheck({check:"custom",...v.normalizeParams(n)});o._zod.check=t;return o}function An(t,n){return e._custom(Ln,t??(()=>true),n)}function Bn(t,n={}){return e._refine(Ln,t,n)}function Fn(e,t){const n=Rn((t=>{t.addIssue=e=>{if(typeof e==="string")t.issues.push(v.issue(e,t.value,n._zod.def));else{const o=e;o.fatal&&(o.continue=false);o.code??(o.code="custom");o.input??(o.input=t.value);o.inst??(o.inst=n);o.continue??(o.continue=!n._zod.def.abort);t.issues.push(v.issue(o))}};return e(t.value,t)}),t);return n}function Vn(e,t={error:`Input not instance of ${e.name}`}){const n=new Ln({type:"custom",check:"custom",fn:t=>t instanceof e,abort:true,...v.normalizeParams(t)});n._zod.bag.Class=e;return n}const Mn=(...t)=>e._stringbool({Pipe:Tn,Boolean:lt,String:me,Transform:un},...t);function Wn(e){const t=xn((()=>Bt([pe(e),ot(),dt(),kt(),Et(t),Yt(pe(),t)])));return t}function Gn(e,t){return Sn(ln(e),t)}
/** @deprecated Use the raw string literal codes instead, e.g. "invalid_type". */const Jn={invalid_type:"invalid_type",too_big:"too_big",too_small:"too_small",invalid_format:"invalid_format",not_multiple_of:"not_multiple_of",unrecognized_keys:"unrecognized_keys",invalid_union:"invalid_union",invalid_key:"invalid_key",invalid_element:"invalid_element",invalid_value:"invalid_value",custom:"custom"};
/** @deprecated Not necessary in Zod 4. */const Kn=Object.freeze({status:"aborted"});const Yn=Kn;
/** @deprecated Use `z.config(params)` instead. */function Xn(t){e.config({customError:t})}
/** @deprecated Use `z.config()` instead. */function qn(){return e.config().customError}function Hn(t){return e._coercedString(me,t)}function Qn(t){return e._coercedNumber(nt,t)}function eo(t){return e._coercedBoolean(lt,t)}function to(t){return e._coercedBigint(mt,t)}function no(t){return e._coercedDate(Pt,t)}var oo=Object.freeze(Object.defineProperty({__proto__:null,bigint:to,boolean:eo,date:no,number:Qn,string:Hn},Symbol.toStringTag,{value:"Module"}));k(G());var io=Object.freeze(Object.defineProperty({__proto__:null,$brand:b,$input:I,$output:z,NEVER:Yn,TimePrecision:j,ZodAny:bt,ZodArray:Nt,ZodBase64:Ke,ZodBase64URL:Xe,ZodBigInt:mt,ZodBigIntFormat:ft,ZodBoolean:lt,ZodCIDRv4:Me,ZodCIDRv6:Ge,ZodCUID:De,ZodCUID2:Oe,ZodCatch:In,ZodCustom:Ln,ZodDate:Pt,ZodDefault:_n,ZodDiscriminatedUnion:Ft,ZodE164:He,ZodEmail:Ze,ZodEmoji:je,ZodEnum:tn,ZodError:ie,ZodFile:sn,ZodGUID:he,ZodIPv4:Ae,ZodIPv6:Fe,ZodISODate:X,ZodISODateTime:K,ZodISODuration:ee,ZodISOTime:H,ZodIntersection:Mt,ZodIssueCode:Jn,ZodJWT:et,ZodKSUID:Le,ZodLazy:En,ZodLiteral:rn,ZodMap:qt,ZodNaN:jn,ZodNanoID:Te,ZodNever:wt,ZodNonOptional:gn,ZodNull:vt,ZodNullable:pn,ZodNumber:nt,ZodNumberFormat:it,ZodObject:Ut,ZodOptional:dn,ZodPipe:Tn,ZodPrefault:yn,ZodPromise:Un,ZodReadonly:Dn,ZodRealError:re,ZodRecord:Kt,ZodSet:Qt,ZodString:me,ZodStringFormat:fe,ZodSuccess:kn,ZodSymbol:ht,ZodTemplateLiteral:On,ZodTransform:un,ZodTuple:Gt,ZodType:le,ZodULID:Ee,ZodURL:Ie,ZodUUID:$e,ZodUndefined:$t,ZodUnion:At,ZodUnknown:zt,ZodVoid:St,ZodXID:Ue,_ZodString:de,_default:hn,any:It,array:Et,base64:Ye,base64url:qe,bigint:pt,boolean:dt,catch:zn,check:Rn,cidrv4:We,cidrv6:Je,clone:w,coerce:oo,config:k,core:e,cuid:Pe,cuid2:Ne,custom:An,date:Ot,discriminatedUnion:Vt,e164:Qe,email:_e,emoji:we,endsWith:c,enum:nn,file:an,flattenError:T,float32:ct,float64:st,formatError:S,function:D,getErrorMap:qn,globalRegistry:P,gt:_,gte:h,guid:ye,includes:i,instanceof:Vn,int:rt,int32:at,int64:Zt,intersection:Wt,ipv4:Be,ipv6:Ve,iso:ne,json:Wn,jwt:tt,keyof:xt,ksuid:Re,lazy:xn,length:u,literal:cn,locales:J,looseObject:Rt,lowercase:l,lt:y,lte:$,map:Ht,maxLength:a,maxSize:O,mime:N,minLength:s,minSize:E,multipleOf:g,nan:wn,nanoid:Se,nativeEnum:on,negative:x,never:Tt,nonnegative:U,nonoptional:vn,nonpositive:C,normalize:p,null:kt,nullable:fn,nullish:Zn,number:ot,object:Ct,optional:mn,overwrite:n,parse:ce,parseAsync:se,partialRecord:Xt,pipe:Sn,positive:L,prefault:$n,preprocess:Gn,prettifyError:R,promise:Cn,property:A,readonly:Pn,record:Yt,refine:Bn,regex:o,regexes:B,registry:F,safeParse:ae,safeParseAsync:ue,set:en,setErrorMap:Xn,size:V,startsWith:r,strictObject:Lt,string:pe,stringbool:Mn,success:bn,superRefine:Fn,symbol:yt,templateLiteral:Nn,toJSONSchema:M,toLowerCase:f,toUpperCase:Z,transform:ln,treeifyError:W,trim:m,tuple:Jt,uint32:ut,uint64:_t,ulid:xe,undefined:gt,union:Bt,unknown:jt,uppercase:d,url:ze,uuid:ge,uuidv4:ve,uuidv6:ke,uuidv7:be,void:Dt,xid:Ce},Symbol.toStringTag,{value:"Module"}));export{Yn as NEVER,bt as ZodAny,Nt as ZodArray,Ke as ZodBase64,Xe as ZodBase64URL,mt as ZodBigInt,ft as ZodBigIntFormat,lt as ZodBoolean,Me as ZodCIDRv4,Ge as ZodCIDRv6,De as ZodCUID,Oe as ZodCUID2,In as ZodCatch,Ln as ZodCustom,Pt as ZodDate,_n as ZodDefault,Ft as ZodDiscriminatedUnion,He as ZodE164,Ze as ZodEmail,je as ZodEmoji,tn as ZodEnum,ie as ZodError,sn as ZodFile,he as ZodGUID,Ae as ZodIPv4,Fe as ZodIPv6,X as ZodISODate,K as ZodISODateTime,ee as ZodISODuration,H as ZodISOTime,Mt as ZodIntersection,Jn as ZodIssueCode,et as ZodJWT,Le as ZodKSUID,En as ZodLazy,rn as ZodLiteral,qt as ZodMap,jn as ZodNaN,Te as ZodNanoID,wt as ZodNever,gn as ZodNonOptional,vt as ZodNull,pn as ZodNullable,nt as ZodNumber,it as ZodNumberFormat,Ut as ZodObject,dn as ZodOptional,Tn as ZodPipe,yn as ZodPrefault,Un as ZodPromise,Dn as ZodReadonly,re as ZodRealError,Kt as ZodRecord,Qt as ZodSet,me as ZodString,fe as ZodStringFormat,kn as ZodSuccess,ht as ZodSymbol,On as ZodTemplateLiteral,un as ZodTransform,Gt as ZodTuple,le as ZodType,Ee as ZodULID,Ie as ZodURL,$e as ZodUUID,$t as ZodUndefined,At as ZodUnion,zt as ZodUnknown,St as ZodVoid,Ue as ZodXID,de as _ZodString,hn as _default,It as any,Et as array,Ye as base64,qe as base64url,pt as bigint,dt as boolean,zn as catch,Rn as check,We as cidrv4,Je as cidrv6,oo as coerce,Pe as cuid,Ne as cuid2,An as custom,Ot as date,io as default,Vt as discriminatedUnion,Qe as e164,_e as email,we as emoji,nn as enum,an as file,ct as float32,st as float64,qn as getErrorMap,ye as guid,Vn as instanceof,rt as int,at as int32,Zt as int64,Wt as intersection,Be as ipv4,Ve as ipv6,ne as iso,Wn as json,tt as jwt,xt as keyof,Re as ksuid,xn as lazy,cn as literal,J as locales,Rt as looseObject,Ht as map,wn as nan,Se as nanoid,on as nativeEnum,Tt as never,vn as nonoptional,kt as null,fn as nullable,Zn as nullish,ot as number,Ct as object,mn as optional,ce as parse,se as parseAsync,Xt as partialRecord,Sn as pipe,$n as prefault,Gn as preprocess,Cn as promise,Pn as readonly,Yt as record,Bn as refine,ae as safeParse,ue as safeParseAsync,en as set,Xn as setErrorMap,Lt as strictObject,pe as string,Mn as stringbool,bn as success,Fn as superRefine,yt as symbol,Nn as templateLiteral,ln as transform,Jt as tuple,ut as uint32,_t as uint64,xe as ulid,gt as undefined,Bt as union,jt as unknown,ze as url,ge as uuid,ve as uuidv4,ke as uuidv6,be as uuidv7,Dt as void,Ce as xid,io as z};

