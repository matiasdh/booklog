// zod/v4/locales/en.js@3.25.63 downloaded from https://ga.jspm.io/npm:zod@3.25.63/dist/esm/v4/locales/en.js

import{z as e,A as t}from"../../../../_/B1zKr9SI.js";const i=e=>{const t=typeof e;switch(t){case"number":return Number.isNaN(e)?"NaN":"number";case"object":if(Array.isArray(e))return"array";if(e===null)return"null";if(Object.getPrototypeOf(e)!==Object.prototype&&e.constructor)return e.constructor.name}return t};const n=()=>{const n={string:{unit:"characters",verb:"to have"},file:{unit:"bytes",verb:"to have"},array:{unit:"items",verb:"to have"},set:{unit:"items",verb:"to have"}};function r(e){return n[e]??null}const a={regex:"input",email:"email address",url:"URL",emoji:"emoji",uuid:"UUID",uuidv4:"UUIDv4",uuidv6:"UUIDv6",nanoid:"nanoid",guid:"GUID",cuid:"cuid",cuid2:"cuid2",ulid:"ULID",xid:"XID",ksuid:"KSUID",datetime:"ISO datetime",date:"ISO date",time:"ISO time",duration:"ISO duration",ipv4:"IPv4 address",ipv6:"IPv6 address",cidrv4:"IPv4 range",cidrv6:"IPv6 range",base64:"base64-encoded string",base64url:"base64url-encoded string",json_string:"JSON string",e164:"E.164 number",jwt:"JWT",template_literal:"input"};return n=>{switch(n.code){case"invalid_type":return`Invalid input: expected ${n.expected}, received ${i(n.input)}`;case"invalid_value":return n.values.length===1?`Invalid input: expected ${t(n.values[0])}`:`Invalid option: expected one of ${e(n.values,"|")}`;case"too_big":{const e=n.inclusive?"<=":"<";const t=r(n.origin);return t?`Too big: expected ${n.origin??"value"} to have ${e}${n.maximum.toString()} ${t.unit??"elements"}`:`Too big: expected ${n.origin??"value"} to be ${e}${n.maximum.toString()}`}case"too_small":{const e=n.inclusive?">=":">";const t=r(n.origin);return t?`Too small: expected ${n.origin} to have ${e}${n.minimum.toString()} ${t.unit}`:`Too small: expected ${n.origin} to be ${e}${n.minimum.toString()}`}case"invalid_format":{const e=n;return e.format==="starts_with"?`Invalid string: must start with "${e.prefix}"`:e.format==="ends_with"?`Invalid string: must end with "${e.suffix}"`:e.format==="includes"?`Invalid string: must include "${e.includes}"`:e.format==="regex"?`Invalid string: must match pattern ${e.pattern}`:`Invalid ${a[e.format]??n.format}`}case"not_multiple_of":return`Invalid number: must be a multiple of ${n.divisor}`;case"unrecognized_keys":return`Unrecognized key${n.keys.length>1?"s":""}: ${e(n.keys,", ")}`;case"invalid_key":return`Invalid key in ${n.origin}`;case"invalid_union":return"Invalid input";case"invalid_element":return`Invalid value in ${n.origin}`;default:return"Invalid input"}}};function r(){return{localeError:n()}}export{r as default,i as parsedType};

